<Application x:Class="AccountingOfTraficViolation.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:AccountingOfTraficViolation.Services"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml" Startup="Application_Startup">
    <Application.Resources>
        <Style x:Key="TextBlockTemplateStyle">
            <Setter Property="TextBlock.FontSize" Value="15"/>
            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
            <Setter Property="TextBlock.FontFamily" Value="Arial"/>
        </Style>
        <Style x:Key="TextBoxTemplateStyle">
            <Setter Property="TextBox.FontSize" Value="15"/>
            <Setter Property="TextBox.FontFamily" Value="Arial"/>
            <Setter Property="TextBox.Padding" Value="2"/>
        </Style>
        <Style x:Key="ButtonTemplateStyle">
            <Setter Property="Button.FontSize" Value="15"/>
            <Setter Property="Button.Padding" Value="3"/>
        </Style>
        <Style x:Key="StackPanelTemplateStyle">
            <Setter Property="StackPanel.HorizontalAlignment" Value="Center"/>
            <Setter Property="StackPanel.VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="TextBoxValidationTemplate" BasedOn="{StaticResource TextBoxTemplateStyle}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="TextBox.ToolTip" 
                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="TextBox.Foreground" Value="Red"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ListBoxItem">
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ListBoxItem.IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="ListBoxItem.FontSize" Value="14" />
                        <Setter Property="ListBoxItem.FontWeight" Value="Bold" />
                        <Setter Property="ListBoxItem.FontStyle" Value="Italic" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <ItemsPanelTemplate x:Key="ItemsTemplate">
            <WrapPanel Margin="10 0 0 0" />
        </ItemsPanelTemplate>

        <!--Expander style-->
        <!--Original code written by XiaoChuan Yu-->
        <ControlTemplate x:Key="SimpleExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
            <Border x:Name="ExpanderButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="Transparent" Grid.ColumnSpan="2"/>
                    <Ellipse x:Name="Circle" Grid.Column="0" Stroke="DarkGray" Width="20" Height="20" 
                             HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    <Path x:Name="Arrow" Grid.Column="0" Data="M 3,1 L 10,5 M 3,9 L 10,5" Stroke="#FF666666" 
                          Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" 
                          RenderTransformOrigin="0.5,0.5" StrokeThickness="2">
                        <Path.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </Path.RenderTransform>
                    </Path>
                    <ContentPresenter x:Name="HeaderContent" Grid.Column="1" Margin="4,0,0,0" ContentSource="Content"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="180" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                                 To="0" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Stroke" Value="#FF3C7FB1" TargetName="Circle"/>
                    <Setter Property="Stroke" Value="#222" TargetName="Arrow"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Stroke" Value="#FF526C7B" TargetName="Circle"/>
                    <Setter Property="StrokeThickness" Value="1.5" TargetName="Circle"/>
                    <Setter Property="Stroke" Value="#FF003366" TargetName="Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <local:MultiplyConverter x:Key="multiplyConverter" />
        <ControlTemplate x:Key="RevealExpanderTemp" TargetType="{x:Type Expander}">
            <DockPanel>
                <ToggleButton x:Name="ExpanderButton" DockPanel.Dock="Top"
                              Template="{StaticResource SimpleExpanderButtonTemp}" Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True" Padding="1.5,0">
                </ToggleButton>
                <ScrollViewer x:Name="ExpanderContentScrollView" DockPanel.Dock="Bottom"
                              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                              HorizontalContentAlignment="Stretch" VerticalContentAlignment="Bottom" Background="White">
                    <ScrollViewer.Tag>
                        <sys:Double>0.0</sys:Double>
                    </ScrollViewer.Tag>
                    <ScrollViewer.Width>
                        <MultiBinding Converter="{StaticResource multiplyConverter}">
                            <Binding Path="ActualWidth" ElementName="ExpanderContent"/>
                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </ScrollViewer.Width>
                    <ScrollViewer.Height>
                        <MultiBinding Converter="{StaticResource multiplyConverter}">
                            <Binding Path="ActualHeight" ElementName="ExpanderContent"/>
                            <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </ScrollViewer.Height>
                    <ContentPresenter x:Name="ExpanderContent" ContentSource="Content"/>
                </ScrollViewer>
            </DockPanel>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="ExpanderContentScrollView" Storyboard.TargetProperty="Tag" 
                                                 To="1" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation  Storyboard.TargetName="ExpanderContentScrollView" Storyboard.TargetProperty="Tag" 
                                                  To="0" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
